#BlueJ class context
comment0.target=ScrollPane2
comment0.text=\ A\ group\ that\ scrolls\ a\ child\ actor\ using\ scrollbars\ and/or\ mouse\ or\ touch\ dragging.\r\n\ <p>\r\n\ The\ actor\ is\ sized\ to\ its\ preferred\ size.\ If\ the\ actor's\ preferred\ width\ or\ height\ is\ less\ than\ the\ size\ of\ this\ scroll\ pane,\r\n\ it\ is\ set\ to\ the\ size\ of\ this\ scroll\ pane.\ Scrollbars\ appear\ when\ the\ actor\ is\ larger\ than\ the\ scroll\ pane.\r\n\ <p>\r\n\ The\ scroll\ pane's\ preferred\ size\ is\ that\ of\ the\ child\ actor.\ At\ this\ size,\ the\ child\ actor\ will\ not\ need\ to\ scroll,\ so\ the\r\n\ scroll\ pane\ is\ typically\ sized\ by\ ignoring\ the\ preferred\ size\ in\ one\ or\ both\ directions.\r\n\ @author\ mzechner\r\n@author\ Nathan\ Sweet
comment1.params=actor
comment1.target=ScrollPane2(com.badlogic.gdx.scenes.scene2d.Actor)
comment1.text=@param\ actor\ May\ be\ null.
comment10.params=
comment10.target=com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener\ getFlickScrollListener()
comment10.text=Called\ by\ constructor.
comment100.params=
comment100.target=boolean\ getFadeScrollBars()
comment101.params=scrollBarTouch
comment101.target=void\ setScrollBarTouch(boolean)
comment101.text=When\ false,\ the\ scroll\ bars\ don't\ respond\ to\ touch\ or\ mouse\ events.\ Default\ is\ true.
comment102.params=smoothScrolling
comment102.target=void\ setSmoothScrolling(boolean)
comment103.params=scrollbarsOnTop
comment103.target=void\ setScrollbarsOnTop(boolean)
comment103.text=\ When\ false\ (the\ default),\ the\ actor\ is\ clipped\ so\ it\ is\ not\ drawn\ under\ the\ scrollbars.\ When\ true,\ the\ actor\ is\ clipped\ to\r\n\ the\ entire\ scroll\ pane\ bounds\ and\ the\ scrollbars\ are\ drawn\ on\ top\ of\ the\ actor.\ If\ {@link\ \#setFadeScrollBars(boolean)}\ is\r\ntrue,\ the\ scroll\ bars\ are\ always\ drawn\ on\ top.
comment104.params=
comment104.target=boolean\ getVariableSizeKnobs()
comment105.params=variableSizeKnobs
comment105.target=void\ setVariableSizeKnobs(boolean)
comment105.text=\ If\ true,\ the\ scroll\ knobs\ are\ sized\ based\ on\ {@link\ \#getMaxX()}\ or\ {@link\ \#getMaxY()}.\ If\ false,\ the\ scroll\ knobs\ are\ sized\r\nbased\ on\ {@link\ Drawable\#getMinWidth()}\ or\ {@link\ Drawable\#getMinHeight()}.\ Default\ is\ true.
comment106.params=cancelTouchFocus
comment106.target=void\ setCancelTouchFocus(boolean)
comment106.text=\ When\ true\ (default)\ and\ flick\ scrolling\ begins,\ {@link\ \#cancelTouchFocus()}\ is\ called.\ This\ causes\ any\ actors\ inside\ the\r\nscrollpane\ that\ have\ received\ touchDown\ to\ receive\ touchUp\ when\ flick\ scrolling\ begins.
comment107.params=shapes
comment107.target=void\ drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)
comment11.params=event\ x\ y\ deltaX\ deltaY
comment11.target=void\ pan(com.badlogic.gdx.scenes.scene2d.InputEvent,\ float,\ float,\ float,\ float)
comment12.params=event\ x\ y\ button
comment12.target=void\ fling(com.badlogic.gdx.scenes.scene2d.InputEvent,\ float,\ float,\ int)
comment13.params=event
comment13.target=boolean\ handle(com.badlogic.gdx.scenes.scene2d.Event)
comment14.params=
comment14.target=void\ addScrollListener()
comment15.params=event\ x\ y\ scrollAmountX\ scrollAmountY
comment15.target=boolean\ scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,\ float,\ float,\ float,\ float)
comment16.params=visible
comment16.target=void\ setScrollbarsVisible(boolean)
comment16.text=Shows\ or\ hides\ the\ scrollbars\ for\ when\ using\ {@link\ \#setFadeScrollBars(boolean)}.
comment17.params=
comment17.target=void\ cancelTouchFocus()
comment17.text=\ Cancels\ the\ stage's\ touch\ focus\ for\ all\ listeners\ except\ this\ scroll\ pane's\ flick\ scroll\ listener.\ This\ causes\ any\ actors\r\n\ inside\ the\ scrollpane\ that\ have\ received\ touchDown\ to\ receive\ touchUp.\r\n@see\ \#setCancelTouchFocus(boolean)
comment18.params=
comment18.target=void\ cancel()
comment18.text=If\ currently\ scrolling\ by\ tracking\ a\ touch\ down,\ stop\ scrolling.
comment19.params=
comment19.target=void\ clamp()
comment2.params=actor\ skin
comment2.target=ScrollPane2(com.badlogic.gdx.scenes.scene2d.Actor,\ com.badlogic.gdx.scenes.scene2d.ui.Skin)
comment2.text=@param\ actor\ May\ be\ null.
comment20.params=style
comment20.target=void\ setStyle(ScrollPane2.ScrollPaneStyle)
comment21.params=
comment21.target=ScrollPane2.ScrollPaneStyle\ getStyle()
comment21.text=\ Returns\ the\ scroll\ pane's\ style.\ Modifying\ the\ returned\ style\ may\ not\ have\ an\ effect\ until\r\n{@link\ \#setStyle(ScrollPaneStyle)}\ is\ called.
comment22.params=delta
comment22.target=void\ act(float)
comment23.params=
comment23.target=void\ layout()
comment24.params=
comment24.target=void\ updateActorPosition()
comment25.params=batch\ parentAlpha
comment25.target=void\ draw(com.badlogic.gdx.graphics.g2d.Batch,\ float)
comment26.params=batch\ r\ g\ b\ a
comment26.target=void\ drawScrollBars(com.badlogic.gdx.graphics.g2d.Batch,\ float,\ float,\ float,\ float)
comment26.text=\ Renders\ the\ scrollbars\ after\ the\ children\ have\ been\ drawn.\ If\ the\ scrollbars\ faded\ out,\ a\ is\ zero\ and\ rendering\ can\ be\r\nskipped.
comment27.params=flingTime\ velocityX\ velocityY
comment27.target=void\ fling(float,\ float,\ float)
comment27.text=\ Generate\ fling\ gesture.\r\n\ @param\ flingTime\ Time\ in\ seconds\ for\ which\ you\ want\ to\ fling\ last.\r\n\ @param\ velocityX\ Velocity\ for\ horizontal\ direction.\r\n@param\ velocityY\ Velocity\ for\ vertical\ direction.
comment28.params=
comment28.target=float\ getPrefWidth()
comment29.params=
comment29.target=float\ getPrefHeight()
comment3.params=actor\ skin\ styleName
comment3.target=ScrollPane2(com.badlogic.gdx.scenes.scene2d.Actor,\ com.badlogic.gdx.scenes.scene2d.ui.Skin,\ java.lang.String)
comment3.text=@param\ actor\ May\ be\ null.
comment30.params=
comment30.target=float\ getMinWidth()
comment31.params=
comment31.target=float\ getMinHeight()
comment32.params=actor
comment32.target=void\ setActor(com.badlogic.gdx.scenes.scene2d.Actor)
comment32.text=\ Sets\ the\ {@link\ Actor}\ embedded\ in\ this\ scroll\ pane.\r\n@param\ actor\ May\ be\ null\ to\ remove\ any\ current\ actor.
comment33.params=
comment33.target=com.badlogic.gdx.scenes.scene2d.Actor\ getActor()
comment33.text=Returns\ the\ actor\ embedded\ in\ this\ scroll\ pane,\ or\ null.
comment34.params=actor
comment34.target=void\ setWidget(com.badlogic.gdx.scenes.scene2d.Actor)
comment34.text=@deprecated\ Use\ {@link\ \#setActor(Actor)}.
comment35.params=
comment35.target=com.badlogic.gdx.scenes.scene2d.Actor\ getWidget()
comment35.text=@deprecated\ Use\ {@link\ \#getActor()}.
comment36.params=actor
comment36.target=void\ addActor(com.badlogic.gdx.scenes.scene2d.Actor)
comment36.text=\ @deprecated\ ScrollPane\ may\ have\ only\ a\ single\ child.\r\n@see\ \#setActor(Actor)
comment37.params=index\ actor
comment37.target=void\ addActorAt(int,\ com.badlogic.gdx.scenes.scene2d.Actor)
comment37.text=\ @deprecated\ ScrollPane\ may\ have\ only\ a\ single\ child.\r\n@see\ \#setActor(Actor)
comment38.params=actorBefore\ actor
comment38.target=void\ addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,\ com.badlogic.gdx.scenes.scene2d.Actor)
comment38.text=\ @deprecated\ ScrollPane\ may\ have\ only\ a\ single\ child.\r\n@see\ \#setActor(Actor)
comment39.params=actorAfter\ actor
comment39.target=void\ addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,\ com.badlogic.gdx.scenes.scene2d.Actor)
comment39.text=\ @deprecated\ ScrollPane\ may\ have\ only\ a\ single\ child.\r\n@see\ \#setActor(Actor)
comment4.params=actor\ style
comment4.target=ScrollPane2(com.badlogic.gdx.scenes.scene2d.Actor,\ ScrollPane2.ScrollPaneStyle)
comment4.text=@param\ actor\ May\ be\ null.
comment40.params=actor
comment40.target=boolean\ removeActor(com.badlogic.gdx.scenes.scene2d.Actor)
comment41.params=actor\ unfocus
comment41.target=boolean\ removeActor(com.badlogic.gdx.scenes.scene2d.Actor,\ boolean)
comment42.params=index\ unfocus
comment42.target=com.badlogic.gdx.scenes.scene2d.Actor\ removeActorAt(int,\ boolean)
comment43.params=x\ y\ touchable
comment43.target=com.badlogic.gdx.scenes.scene2d.Actor\ hit(float,\ float,\ boolean)
comment44.params=pixelsX
comment44.target=void\ scrollX(float)
comment44.text=Called\ whenever\ the\ x\ scroll\ amount\ is\ changed.
comment45.params=pixelsY
comment45.target=void\ scrollY(float)
comment45.text=Called\ whenever\ the\ y\ scroll\ amount\ is\ changed.
comment46.params=pixelsX
comment46.target=void\ visualScrollX(float)
comment46.text=Called\ whenever\ the\ visual\ x\ scroll\ amount\ is\ changed.
comment47.params=pixelsY
comment47.target=void\ visualScrollY(float)
comment47.text=Called\ whenever\ the\ visual\ y\ scroll\ amount\ is\ changed.
comment48.params=
comment48.target=float\ getMouseWheelX()
comment48.text=Returns\ the\ amount\ to\ scroll\ horizontally\ when\ the\ mouse\ wheel\ is\ scrolled.
comment49.params=
comment49.target=float\ getMouseWheelY()
comment49.text=Returns\ the\ amount\ to\ scroll\ vertically\ when\ the\ mouse\ wheel\ is\ scrolled.
comment5.params=
comment5.target=void\ addCaptureListener()
comment50.params=pixels
comment50.target=void\ setScrollX(float)
comment51.params=
comment51.target=float\ getScrollX()
comment51.text=Returns\ the\ x\ scroll\ position\ in\ pixels,\ where\ 0\ is\ the\ left\ of\ the\ scroll\ pane.
comment52.params=pixels
comment52.target=void\ setScrollY(float)
comment53.params=
comment53.target=float\ getScrollY()
comment53.text=Returns\ the\ y\ scroll\ position\ in\ pixels,\ where\ 0\ is\ the\ top\ of\ the\ scroll\ pane.
comment54.params=
comment54.target=void\ updateVisualScroll()
comment54.text=\ Sets\ the\ visual\ scroll\ amount\ equal\ to\ the\ scroll\ amount.\ This\ can\ be\ used\ when\ setting\ the\ scroll\ amount\ without\r\nanimating.
comment55.params=
comment55.target=float\ getVisualScrollX()
comment56.params=
comment56.target=float\ getVisualScrollY()
comment57.params=
comment57.target=float\ getVisualScrollPercentX()
comment58.params=
comment58.target=float\ getVisualScrollPercentY()
comment59.params=
comment59.target=float\ getScrollPercentX()
comment6.params=event\ x\ y\ pointer\ button
comment6.target=boolean\ touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,\ float,\ float,\ int,\ int)
comment60.params=percentX
comment60.target=void\ setScrollPercentX(float)
comment61.params=
comment61.target=float\ getScrollPercentY()
comment62.params=percentY
comment62.target=void\ setScrollPercentY(float)
comment63.params=flickScroll
comment63.target=void\ setFlickScroll(boolean)
comment64.params=halfTapSquareSize
comment64.target=void\ setFlickScrollTapSquareSize(float)
comment65.params=x\ y\ width\ height
comment65.target=void\ scrollTo(float,\ float,\ float,\ float)
comment65.text=\ Sets\ the\ scroll\ offset\ so\ the\ specified\ rectangle\ is\ fully\ in\ view,\ if\ possible.\ Coordinates\ are\ in\ the\ scroll\ pane\ actor's\r\ncoordinate\ system.
comment66.params=x\ y\ width\ height\ centerHorizontal\ centerVertical
comment66.target=void\ scrollTo(float,\ float,\ float,\ float,\ boolean,\ boolean)
comment66.text=\ Sets\ the\ scroll\ offset\ so\ the\ specified\ rectangle\ is\ fully\ in\ view,\ and\ optionally\ centered\ vertically\ and/or\ horizontally,\r\nif\ possible.\ Coordinates\ are\ in\ the\ scroll\ pane\ actor's\ coordinate\ system.
comment67.params=
comment67.target=float\ getMaxX()
comment67.text=Returns\ the\ maximum\ scroll\ value\ in\ the\ x\ direction.
comment68.params=
comment68.target=float\ getMaxY()
comment68.text=Returns\ the\ maximum\ scroll\ value\ in\ the\ y\ direction.
comment69.params=
comment69.target=float\ getScrollBarHeight()
comment7.params=event\ x\ y\ pointer\ button
comment7.target=void\ touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,\ float,\ float,\ int,\ int)
comment70.params=
comment70.target=float\ getScrollBarWidth()
comment71.params=
comment71.target=float\ getScrollWidth()
comment71.text=Returns\ the\ width\ of\ the\ scrolled\ viewport.
comment72.params=
comment72.target=float\ getScrollHeight()
comment72.text=Returns\ the\ height\ of\ the\ scrolled\ viewport.
comment73.params=
comment73.target=boolean\ isScrollX()
comment73.text=Returns\ true\ if\ the\ actor\ is\ larger\ than\ the\ scroll\ pane\ horizontally.
comment74.params=
comment74.target=boolean\ isScrollY()
comment74.text=Returns\ true\ if\ the\ actor\ is\ larger\ than\ the\ scroll\ pane\ vertically.
comment75.params=x\ y
comment75.target=void\ setScrollingDisabled(boolean,\ boolean)
comment75.text=Disables\ scrolling\ in\ a\ direction.\ The\ actor\ will\ be\ sized\ to\ the\ FlickScrollPane\ in\ the\ disabled\ direction.
comment76.params=
comment76.target=boolean\ isScrollingDisabledX()
comment77.params=
comment77.target=boolean\ isScrollingDisabledY()
comment78.params=
comment78.target=boolean\ isLeftEdge()
comment79.params=
comment79.target=boolean\ isRightEdge()
comment8.params=event\ x\ y\ pointer
comment8.target=void\ touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,\ float,\ float,\ int)
comment80.params=
comment80.target=boolean\ isTopEdge()
comment81.params=
comment81.target=boolean\ isBottomEdge()
comment82.params=
comment82.target=boolean\ isDragging()
comment83.params=
comment83.target=boolean\ isPanning()
comment84.params=
comment84.target=boolean\ isFlinging()
comment85.params=velocityX
comment85.target=void\ setVelocityX(float)
comment86.params=
comment86.target=float\ getVelocityX()
comment86.text=Gets\ the\ flick\ scroll\ x\ velocity.
comment87.params=velocityY
comment87.target=void\ setVelocityY(float)
comment88.params=
comment88.target=float\ getVelocityY()
comment88.text=Gets\ the\ flick\ scroll\ y\ velocity.
comment89.params=overscrollX\ overscrollY
comment89.target=void\ setOverscroll(boolean,\ boolean)
comment89.text=\ For\ flick\ scroll,\ if\ true\ the\ actor\ can\ be\ scrolled\ slightly\ past\ its\ bounds\ and\ will\ animate\ back\ to\ its\ bounds\ when\r\nscrolling\ is\ stopped.\ Default\ is\ true.
comment9.params=event\ x\ y
comment9.target=boolean\ mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,\ float,\ float)
comment90.params=distance\ speedMin\ speedMax
comment90.target=void\ setupOverscroll(float,\ float,\ float)
comment90.text=\ For\ flick\ scroll,\ sets\ the\ overscroll\ distance\ in\ pixels\ and\ the\ speed\ it\ returns\ to\ the\ actor's\ bounds\ in\ seconds.\ Default\r\nis\ 50,\ 30,\ 200.
comment91.params=
comment91.target=float\ getOverscrollDistance()
comment92.params=x\ y
comment92.target=void\ setForceScroll(boolean,\ boolean)
comment92.text=\ Forces\ enabling\ scrollbars\ (for\ non-flick\ scroll)\ and\ overscrolling\ (for\ flick\ scroll)\ in\ a\ direction,\ even\ if\ the\ contents\r\ndo\ not\ exceed\ the\ bounds\ in\ that\ direction.
comment93.params=
comment93.target=boolean\ isForceScrollX()
comment94.params=
comment94.target=boolean\ isForceScrollY()
comment95.params=flingTime
comment95.target=void\ setFlingTime(float)
comment95.text=For\ flick\ scroll,\ sets\ the\ amount\ of\ time\ in\ seconds\ that\ a\ fling\ will\ continue\ to\ scroll.\ Default\ is\ 1.
comment96.params=clamp
comment96.target=void\ setClamp(boolean)
comment96.text=For\ flick\ scroll,\ prevents\ scrolling\ out\ of\ the\ actor's\ bounds.\ Default\ is\ true.
comment97.params=bottom\ right
comment97.target=void\ setScrollBarPositions(boolean,\ boolean)
comment97.text=Set\ the\ position\ of\ the\ vertical\ and\ horizontal\ scroll\ bars.
comment98.params=fadeScrollBars
comment98.target=void\ setFadeScrollBars(boolean)
comment98.text=When\ true\ the\ scrollbars\ don't\ reduce\ the\ scrollable\ size\ and\ fade\ out\ after\ some\ time\ of\ not\ being\ used.
comment99.params=fadeAlphaSeconds\ fadeDelaySeconds
comment99.target=void\ setupFadeScrollBars(float,\ float)
numComments=108
